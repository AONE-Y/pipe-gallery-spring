ip: 192.168.2.219

server:
  port: 9997
  servlet:
    encoding:
      force: true
      charset: utf-8
      enabled: true

##############################hainu-system##################################################
spring:
  shardingsphere:
    props:
      sql:
        show: true
    datasource:
      names: devicehistory
      devicehistory:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.10.183:3306/testshardingjdbc?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: root
    sharding:
      default-data-source-name: devicehistory

      tables:
        # 这个table名字 要注意和下面的一样
        device_log:
          key-generator:
            column: device_id
            type: SNOWFLAKE
          actual-data-nodes: devicehistory.device_log_$->{2021..2030}0$->{1..9}, devicehistory.device_log_$->{2021..2030}$->{10..12}
          table-strategy:
            standard:
              range-algorithm-class-name: com.hainu.system.config.sharding.DefaultTableRangeShardingAlgorithm
              precise-algorithm-class-name: com.hainu.system.config.sharding.DefaultTableShardingAlgorithm
              sharding-column: create_time
  redis:
    port: 6379
    host: 192.168.2.219
    database: 3




#spring:
#  datasource:
#    type: com.alibaba.druid.pool.DruidDataSource
#    url: jdbc:mysql://192.168.10.183:3306/testshardingjdbc?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai
#    username: root
#    password: root
#    driver-class-name: com.mysql.cj.jdbc.Driver
#  redis:
#    port: 6379
#    host: 192.168.2.219
#    database: 3



mybatis-plus:
  mapper-locations: classpath*:mapper/*/*.xml
  #typeAliasesPackage: com.jeebase.*.*.entity
  global-config:
    db-config:
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: auto
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: not_empty
      #数据库大写下划线转换
      #capital-mode: true
      #逻辑删除配置
      logic-delete-value: 1
      logic-not-delete-value: 0
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #开启sql日志


sa-token:
  # token名称 (同时也是cookie名称)
  token-name: Authorization
  # token有效期，单位秒，-1代表永不过期
  timeout: 604800
  # token临时有效期 (指定时间内无操作就视为token过期)，单位秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: false
  # 是否从cookie中读取token
  is-read-cookie: false
  # 是否从head中读取token
  is-read-head: true


mqtt:
  username: xinxi                           # 账号
  password: xinxi216                           # 密码
  host-url: tcp://${ip}:1883           # mqtt连接tcp地址
  client-id: Monitor_1234567        # 客户端Id，每个启动的id要不同 随机：${random.value}
  default-topic: status                       # 默认主题
  timeout: 70                              # 超时时间
  keepalive: 20                            # 保持连接数


info:
  baseBtUrl: http://192.168.2.219:8888/system?action=
  baseEmqUrl: http://mqtt.xinxi.ml:8081/api/v4


########################################hainu-system############################################################